{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAkBA;;;;;;AAUA;;;AAKA;;;;;;;;;AAWA;;;;;;;;;;;;;;AAgBA;;;;AAMA;;;;AA2BA;;;;;;;;;;;;;;;ACpEA;;;;;;;AASA;;;AAyEA;;;;;;;;;;;;;;;;;;;;;ACpFA;AACA;;;;;;;;;;;;;;;ACRA","sources":["webpack://clone/./src/components/Footer.jsx","webpack://clone/./src/components/Banner.jsx","webpack://clone/./src/styles/globalStyle.js","webpack://clone/./src/App.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst FooterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px 0;\n  border-top: 1px solid rgb(25, 25, 25);\n  width: 100%;\n  position: relative;\n  z-index: 100;\n\n  @media (max-width: 769px) {\n    padding: 20px 20px;\n    padding-bottom: 30px;\n  }\n`;\n\nconst FooterContent = styled.div``;\n\nconst FooterLinkContainer = styled.div`\n  width: 500px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst FooterLinkTitle = styled.h1`\n  color: gray;\n  font-size: 17px;\n`;\n\nconst FooterLinkContent = styled.div`\n  display: flex;\n  justify-content: space-bewteen;\n  flex-wrap: wrap;\n  margin-top: 35px;\n\n  @media (max-width: 768px) {\n    margin-top: 26px;\n  }\n`;\n\nconst FooterLink = styled.a`\n  color: gray;\n  font-size: 14px;\n  width: 110px;\n  margin-bottom: 21px;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  @media (max-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst FooterDescContainer = styled.div`\n  margin-top: 30px @media (max-width: 768px) {\n    margin-top: 20px;\n  }\n`;\n\nconst FooterDescRights = styled.h2`\n  color: white;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst Footer = () => {\n  return (\n    <FooterContainer>\n      <FooterContent>\n        <FooterLinkContainer>\n          <FooterLinkTitle>넷플릭스 대한민국</FooterLinkTitle>\n          <FooterLinkContent>\n            <FooterLink href=\"https://help.netflix.com/ko/node/412\">넷플릭스 소개</FooterLink>\n            <FooterLink href=\"https://help.netflix.com/ko\">고객 센터</FooterLink>\n            <FooterLink href=\"https://help.netflix.com/ko/\">미디어 센터</FooterLink>\n            <FooterLink href=\"https://help.netflix.com/ko/\">이용 약관</FooterLink>\n          </FooterLinkContent>\n          <FooterDescContainer>\n            <FooterDescRights>Netflix Rights Reserved.</FooterDescRights>\n          </FooterDescContainer>\n        </FooterLinkContainer>\n      </FooterContent>\n    </FooterContainer>\n  );\n};\n\nexport default Footer;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport axios from '@/api/axios';\nimport { requests } from '@/api/requests.js';\n\nimport '@/components/Banner.css';\n\nconst Iframe = styled.iframe`\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  opacity: 0.65;\n  border: none;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst HomeContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n  const [isClicked, setIsClicked] = useState(false);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const request = await axios.get(requests.fetchNowPlaying);\n\n    const movieId =\n      request.data.results[Math.floor(Math.random() * request.data.results.length)].id;\n\n    const { data: movieDetail } = await axios.get(`movie/${movieId}`, {\n      params: { append_to_response: 'videos' },\n    });\n    setMovie(movieDetail);\n  };\n\n  const truncate = (str, n) => {\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\n  };\n\n  return (\n    <>\n      {isClicked ? (\n        <Container>\n          <HomeContainer>\n            <Iframe\n              width=\"640\"\n              height=\"360\"\n              src={`https://www.youtube.com/embed/${movie.videos.results[0].key}?controls=0&autoplay=1&loop=1&mute=1&playlist=${movie.videos.results[0].key}`}\n              title=\"YouTube video player\"\n              frameborder=\"0\"\n              allow=\"autoplay; fullscreen\"\n              allowfullscreen\n            ></Iframe>\n          </HomeContainer>\n        </Container>\n      ) : (\n        <header\n          className=\"banner\"\n          style={{\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie.backdrop_path}\")`,\n            backgroundPosition: 'top center',\n            backgroundSize: 'cover',\n          }}\n        >\n          <div className=\"banner__contents\">\n            <h1 className=\"banner__title\">{movie.title || movie.name || movie.original_name}</h1>\n\n            <div className=\"banner__buttons\">\n              <button className=\"banner__button play\" onClick={() => setIsClicked(true)}>\n                Play\n              </button>\n              <button className=\"banner__button info\">More Information</button>\n            </div>\n\n            <h1 className=\"banner__description\">{truncate(movie.overview, 100)}</h1>\n          </div>\n          <div className=\"banner--fadeBottom\" />\n        </header>\n      )}\n    </>\n  );\n};\n\nexport default Banner;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n    height: 100vh;\n    width: 100vw;\n    margin: 0;\n    padding: 0;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-size: 1.6rem;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    background: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.text};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  :lang(ko) {\n    h1, h2, h3 {\n      word-break: keep-all;\n    }\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n`;\n\nexport default GlobalStyle;\n","import { RouterProvider } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\n\nimport { router } from '@/router';\nimport DefaultTheme from '@/styles/defaultTheme';\nimport GlobalStyle from '@/styles/globalStyle';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={DefaultTheme}>\n      <GlobalStyle />\n      <RouterProvider router={router} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"names":[],"sourceRoot":""}